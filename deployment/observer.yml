AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

##########################################################################
#  Parameters                                                            #
##########################################################################
Parameters:
  TelegramApiKey:
    Type: String
  BucketName:
    Type: String
    Default: web-observer-bucket
  DynamoTableName:
    Type: String
    Default: ObserverTraces

##########################################################################
#  Global values that are applied to all resources                       #
##########################################################################
Globals:
  Function:
    MemorySize: 512
    Architectures: ["arm64"]
    Runtime: provided.al2
    Timeout: 29
    Layers:
      - !Sub arn:aws:lambda:eu-west-1:580247275435:layer:LambdaInsightsExtension-Arm64:2

Resources:
##########################################################################
#   Lambda Functions                                                     #
##########################################################################
  ObserverBotHandlerLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 1
      LogGroupName: !Sub "/aws/lambda/web-observer-bot-${AWS::StackName}"

  ObserverBotHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub web-observer-bot-${AWS::StackName}
      FunctionUrlConfig:
        AuthType: NONE
      CodeUri: ../build/bot.zip
      Handler: main
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref DynamoTableName
        - S3CrudPolicy:
            BucketName: !Ref BucketName
      Environment:
        Variables:
          TELEGRAM_BOT_TOKEN: !Ref TelegramApiKey
    DependsOn:
      - ObserverBotHandlerLogs

  WebObserverTrackerLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 1
      LogGroupName: !Sub "/aws/lambda/web-observer-${AWS::StackName}"

  WebObserverFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub web-observer-${AWS::StackName}
      CodeUri: ../build/web-observer.zip
      Handler: main
      Timeout: 900
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref DynamoTableName
        - S3CrudPolicy:
            BucketName: !Ref BucketName
      Environment:
        Variables:
          TABLE_NAME: !Ref DynamoTableName
          BUCKET_NAME: !Ref BucketName
          TELEGRAM_BOT_TOKEN: !Ref TelegramApiKey
      Events:
        ObserverSchedule:
          Type: ScheduleV2
          Properties:
            Description: Observer schedule
            ScheduleExpression: rate(5 minutes)
            ScheduleExpressionTimezone: Europe/London
            State: DISABLED
            Name: ObserverSchedule
    DependsOn:
      - WebObserverTrackerLogs

##########################################################################
#   DynamoDb Tables                                                      #
##########################################################################
  ObserverTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref DynamoTableName
      AttributeDefinitions:
        - AttributeName: URL
          AttributeType: S
        - AttributeName: ChatID
          AttributeType: N
      KeySchema:
        - AttributeName: URL
          KeyType: HASH
        - AttributeName: ChatID
          KeyType: RANGE
      BillingMode: PROVISIONED
      ProvisionedThroughput: 
        ReadCapacityUnits: "1"
        WriteCapacityUnits: "1"

##########################################################################
#   S3 Bucket                                                      #
##########################################################################
  InputBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      CorsConfiguration:
        CorsRules:
          - AllowedOrigins:
              - '*'
            AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
              - POST
            MaxAge: 3000
      LifecycleConfiguration:
        Rules:
          - Id: DeleteLifeCyclePolicy
            Status: Enabled
            ExpirationInDays: 30

Outputs:
  InputBucket:
    Value: 
      Ref: InputBucket
    Export: 
      Name: !Sub observer-bucket-${AWS::StackName}
  ObserverTable:
    Value: 
      Ref: ObserverTable
    Export: 
      Name: !Sub observer-table-${AWS::StackName}
